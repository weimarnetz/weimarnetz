#!/bin/sh

# this outputs an inital small '/tmp/loader' which can be sourced and
# automatically solves dependencies for all 'classes' and it methods(),
# e.g. for class '_system' and method architecture()

# "Stick to portable constructs where possible, and
#  you will make somebody's life easier in the future.
#  Maybe your own."

while read -r LINE; do {		# e.g. none /run/user tmpfs rw,nosuid,nodev,noexec...
	case "$LINE" in			# attribute 'noexec' does not matter,
		*' tmpfs rw,'*)		# we only 'source' shellscripts
			set -- $LINE
			mkdir -p "$2/kalua" 2>/dev/null && {
				TMPDIR="$2/kalua"
				LINE='is RAM-drive (tmpfs) and '
				break
			}
		;;
	esac
	LINE=
} done <'/proc/mounts'
logger -s -- "$0: [OK] use \$TMPDIR which ${LINE}points to '${TMPDIR:=/tmp}'"
chmod -R 777 "$TMPDIR"

LOADER_ENTRY='/tmp/loader'		# entry point for all scripts, should be in RAM-drive
LOADER="$TMPDIR/loader_$$"
LOADER_FINAL="$TMPDIR/loader"		# later '$LOADER_ENTRY' is symlinked to it
POOLDIR="$TMPDIR/kalua_pool"
mkdir -p "$POOLDIR"

BASEDIR="$( dirname $0 )/kalua"		# place for the 'class'-files
case "$BASEDIR" in			# e.g. /etc/kalua_init -> /etc
	'/'*)	# /etc/kalua
	;;
	*)	# openwrt-addons/etc/kalua -> /home/user/mysource/openwrt-addons/etc/kalua
		BASEDIR="$( pwd )/$BASEDIR"
	;;
esac

# _ s    http		-> show methods for class 'http' (e.g. _http)
# _ http arg1 argX	-> include + start with given arguments
# _ rebuild		-> rebuild loader
# _ t			-> test if loader already included
# _			-> list classes

cat >"$LOADER" <<EOF
#!/bin/sh
_ t 2>/dev/null&&return

_(){ case \$1 in
s)sed -n "/;}$/! s/^\(_\${2}_.*\)()/\1/p" $BASEDIR/\$2|sort;;
i)local a=\${3:-s} b=\$2;shift 3;_ \$b;case \$a in include);;*)_\${b}_\$a "\$@";;esac;;
t);;rebuild)${BASEDIR}_init;;*)[ \$1 ]&&. $POOLDIR/\$1||
for _ in $POOLDIR/*;do echo _\${_##*/};done;;esac
}

TMPDIR=$TMPDIR
EOF

# generate loader and add methods 'show' + 'include'
for CLASS in $BASEDIR/*; do {
	CLASS="${CLASS##*/}"	# quick basename

	cat >"$POOLDIR/$CLASS" <<EOF
_$CLASS(){ local a=\${1:-s};shift;_${CLASS}_\$a "\$@";}
_${CLASS}_s(){ _ s $CLASS;}
_${CLASS}_include(){ :;}
. $BASEDIR/$CLASS
EOF
	if sh -n "$BASEDIR/$CLASS"; then
		echo >>"$LOADER" "_$CLASS(){ _ i $CLASS \"\$@\";}"
	else
		echo >>"$LOADER" "_$CLASS(){ logger -s -- class_error: _$CLASS \$@ ;}"
	fi

	# include everything in head-section of CLASS, e.g. global var: MYVAR=123
	# TODO: rewrite with 1 sed-call
	read -r LINE _ <"$BASEDIR/$CLASS"
	case "$LINE" in
		'#!/bin/sh'*)
			sed -n "2,/^_$CLASS/{/^[A-Z]/p}" "$BASEDIR/$CLASS" >>"$LOADER"
		;;
	esac
} done

# include own extensions
for FILE in "$0.user_"* "$0.user"; do {
	[ -e "$FILE" ] && . "$FILE" >>"$LOADER"
} done

# symlink /tmp/loader -> copy in ramdisc
mv "$LOADER" "$LOADER_FINAL"
[ -h "$LOADER_ENTRY" ] || {
	[ -e "$LOADER_ENTRY" ] && rm "$LOADER_ENTRY"
	ln -s "$LOADER_FINAL" "$LOADER_ENTRY"
}

logger -s -- "$0: [OK] generated '$LOADER_ENTRY' using files in '$POOLDIR'"
case "$PS1" in
	*'@'*)	# interactive shell (set from /etc/profile)
		logger -s -- "$0: [OK] reload it with 'unset -f _; . $LOADER_ENTRY'"
	;;
esac
